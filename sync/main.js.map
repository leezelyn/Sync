{"version":3,"file":"main.js","sources":["webpack://astrobox-plugin-template/./src/index.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/config.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/utils.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/debug.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/device.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/event.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/filesystem.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/installer.js","webpack://astrobox-plugin-template/webpack/runtime/rspack_version","webpack://astrobox-plugin-template/webpack/runtime/rspack_unique_id","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/interconnect.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/lifecycle.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/native.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/network.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/provider.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/thirdpartyapp.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/ui.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/index.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/init.js"],"sourcesContent":["import AstroBox from \"astrobox-plugin-sdk\";\n\n\nconst DEFAULT_CHUNK = 4 * 1024;\nconst MIN_CHUNK     = 512;\nconst JSON_LIMIT    = 7000;\nconst BAND_PKG      = \"com.tse.watch.jlpt\";\nconst MAX_RETRIES   = 3;\nconst ACK_TIMEOUT   = 5000; \nlet   TARGET_KBPS   = 64; \n\n\nlet CHUNK_SIZE   = DEFAULT_CHUNK;\nlet totalSize    = 0;\nlet started      = false;\nlet ackTimer     = null;\nlet retryCount   = 0;\nlet compiledBuffer = null;\nlet compiledName   = \"\";\n\n\nlet startTime = 0, lastAckTime = 0, lastAckBytes = 0;\nlet lastSendTs = 0;\n\n\nlet lastSent = null; \n\n/** ============ UI ============ */\nlet pickId = AstroBox.native.regNativeFun(onPick);\nlet sendId = AstroBox.native.regNativeFun(onSendFile);\nlet ui;\n\nAstroBox.lifecycle.onLoad(() => {\n  ui = [\n    {\n      node_id: \"pickBtn\",\n      visibility: true,\n      disabled: false,\n      content: { type: \"Button\", value: { primary: true, text: \"选择 .txt 文件\", callback_fun_id: pickId } }\n    },\n    {\n      node_id: \"sendBtn\",\n      visibility: true,\n      disabled: false,\n      content: { type: \"Button\", value: { primary: true, text: \"发送文件\", callback_fun_id: sendId } }\n    },\n    {\n      node_id: \"status\",\n      visibility: true,\n      disabled: false,\n      content: { type: \"Text\", value: \"就绪，等待发送\" }\n    }\n  ];\n  AstroBox.ui.updatePluginSettingsUI(ui);\n  onListen();\n});\n\nfunction setTextNode(nodeId, value) {\n  const i = ui.findIndex(n => n.node_id === nodeId);\n  if (i !== -1) { ui[i].content.value = value; }\n  else {\n    ui.push({ node_id: nodeId, visibility: true, disabled: false, content: { type: \"Text\", value } });\n  }\n  AstroBox.ui.updatePluginSettingsUI(ui);\n}\n\n/** ============ 事件监听 ============ */\nasync function onListen(){\n  AstroBox.event.addEventListener(`onQAICMessage_${BAND_PKG}`, (raw)=>{ handleAck(raw); });\n}\n\n/** ============ 选择文件 ============ */\nasync function onPick(){\n  try {\n    const picked = await AstroBox.filesystem.pickFile({ decode_text: true, encoding: 'utf-8' });\n    resetState();\n    if (!picked) return setTextNode('status', '已取消选择');\n\n    const path = picked.path || picked.filePath || picked.uri || \"\";\n    if (!/\\.txt$/i.test(path)) return setTextNode('status', '仅支持选择 .txt 文件');\n\n    const totalLen = (picked.size || picked.text_len || 0) >>> 0;\n    if (!totalLen) return setTextNode('status', '读取失败：文件长度为 0');\n\n    const u8All = await readFileChunked(path, totalLen, 4096, (done)=>{\n      setTextNode('status', `读取中… ${(done/1024).toFixed(1)}/${(totalLen/1024).toFixed(1)} KB`);\n    });\n    setTextNode('status','请勿操作，正在编译...'); \n    const text = decodeUtf8(u8All);\n    compiledBuffer = buildBinFromTxtContent(text);\n    totalSize = compiledBuffer.byteLength >>> 0;\n    compiledName = getFileName(path).replace(/\\.txt$/i, \".bin\");\n    setTextNode('status', `构建完成：${compiledName} ${bytesToMB(totalSize)} MB`);\n  } catch (e) {\n    setTextNode('status', `选择失败：${extractErr(e)}`);\n  }\n}\n\nfunction toU8(res){\n  if (!res) return new Uint8Array(0);\n  if (res instanceof Uint8Array) return res;\n  if (res.buffer instanceof ArrayBuffer) return new Uint8Array(res.buffer, res.byteOffset||0, res.byteLength||res.buffer.byteLength);\n  if (typeof res === 'string') return encodeUtf8(res);\n  return new Uint8Array(0);\n}\n\nasync function readFileChunked(path, totalLen, chunkSize=4096, onProgress){\n  const chunks=[]; let off=0;\n  while(off<totalLen){\n    const need = Math.min(chunkSize, totalLen-off);\n    const part = await AstroBox.filesystem.readFile(path, { offset: off, len: need, decode_text: false });\n    const u8 = toU8(part); \n    if(!u8.length) throw new Error(`分片读取返回 0 字节 @${off}`);\n    chunks.push(u8); \n    off += u8.length; \n    onProgress && onProgress(off, totalLen);\n  }\n  const all = chunks.reduce((s,c)=>s+c.length,0), out=new Uint8Array(all); \n  let p=0; \n  for(const c of chunks){ out.set(c,p); p+=c.length; } \n  return out;\n}\n\n/** ============ 发送主流程 ============ */\nasync function onSendFile(){\n  const apps = await AstroBox.thirdpartyapp.getThirdPartyAppList();\n  if (!apps.find(a=>a.package_name===BAND_PKG)) return setTextNode('status', `未检测到 ${BAND_PKG}`);\n  if (!compiledBuffer) return setTextNode('status', '请先选择 .txt（自动编译）');\n  if (started) return setTextNode('status','正在传输中…');\n\n  started = true; retryCount = 0;\n  startTime = lastAckTime = lastSendTs = Date.now();\n  lastAckBytes = 0;\n\n  try { \n    await sendMeta(); \n    setTextNode('status','已发送 meta，等待 ACK…'); \n  } catch(e){ \n    started=false; setTextNode('status', `sendMeta 失败：${e.message}`); \n  }\n}\n\n/** ============ ACK 处理 ============ */\nasync function handleAck(raw){\n  try {\n    const pkg = JSON.parse(raw);\n\n    switch (pkg.cmd) {\n      case 'ack': {\n        clearAckTimer(); \n        retryCount=0;\n        const next = pkg.offset>>>0;\n        // 速度显示（只在前进时刷新）\n        if (next > lastAckBytes) {\n          const now = Date.now();\n          const dt  = Math.max(0.001, (now - lastAckTime) / 1000);\n          const db  = next - lastAckBytes;\n          const cur = (db / 1024 / dt).toFixed(1);\n          const avg = (next / 1024 / Math.max(0.001,(now-startTime)/1000)).toFixed(1);\n          lastAckTime = now; lastAckBytes = next;\n          setTextNode('status', `已发 ${(next/1024).toFixed(1)}/${(totalSize/1024).toFixed(1)} KB | ${cur} KB/s | 均速 ${avg} KB/s`);\n        }\n\n        if (next < totalSize){\n          await sendChunk(next);\n        } else {\n          await AstroBox.interconnect.sendQAICMessage(BAND_PKG, JSON.stringify({ cmd:'done' }));\n        }\n        break;\n      }\n\n      case 'done': {\n        clearAckTimer(); \n        setTextNode('status','传输成功！');\n        resetState();\n        break;\n      }\n\n      case 'resend': { // 接收端 CRC 不通过，请求重发同 offset\n        clearAckTimer(); \n        await sendChunk((pkg.offset>>>0));\n        break;\n      }\n\n      default:\n        // 其他指令不处理\n        break;\n    }\n  } catch(e){ \n    setTextNode('status', `解析 ACK 失败：${e.message}`); \n  }\n}\n\n/** ============ 发送 meta / chunk ============ */\nasync function sendMeta(){\n  const payload = JSON.stringify({ cmd:'meta', size: totalSize });\n  await AstroBox.interconnect.sendQAICMessage(BAND_PKG, payload);\n  startAckTimer({ type:'meta' });\n}\n\n\nfunction sleep(ms){ return new Promise(r => setTimeout(r, ms)); }\nasync function throttleForRate(bytes){\n  if (TARGET_KBPS <= 0) return;\n  const now = Date.now();\n  const minInterval = (bytes / (TARGET_KBPS * 1024)) * 1000;\n  const elapsed = now - lastSendTs;\n  const wait = Math.max(0, minInterval - elapsed);\n  if (wait > 0) await sleep(wait);\n  lastSendTs = Date.now();\n}\n\nfunction crc32(u8){\n  let c = ~0 >>> 0;\n  for (let i=0;i<u8.length;i++){\n    c ^= u8[i];\n    for (let k=0;k<8;k++) c = (c>>>1) ^ (0xEDB88320 & -(c&1));\n  }\n  return (~c) >>> 0;\n}\n\nasync function sendChunk(offset){\n  if (!compiledBuffer) throw new Error('compiledBuffer 为空');offset >>>= 0; \n  if (offset >= totalSize){ \n    await AstroBox.interconnect.sendQAICMessage(BAND_PKG, JSON.stringify({cmd:'done'})); \n    return; \n  }\n\n  const remain = totalSize - offset;\n  const len    = Math.min(CHUNK_SIZE>>>0, remain>>>0);\n  const slice  = compiledBuffer.subarray(offset, offset+len);\n  const crc    = crc32(slice);\n  const b64    = u8ToBase64(slice);\n\n  const payloadObj = { cmd:'chunk', offset, total: totalSize>>>0, crc, data_b64: b64 };\n  let payload = JSON.stringify(payloadObj);\n  if (payload.length > JSON_LIMIT && CHUNK_SIZE > MIN_CHUNK){\n    const old = CHUNK_SIZE; \n    CHUNK_SIZE = Math.max(MIN_CHUNK, Math.floor(CHUNK_SIZE / 2));\n    console.log('[SEND] payload=%d 降分片 %d→%d', payload.length, old, CHUNK_SIZE);\n    return sendChunk(offset);\n  }\n\n  try{\n\n    await throttleForRate(len);\n\n    await AstroBox.interconnect.sendQAICMessage(BAND_PKG, payload);\n    lastSent = { type:'chunk', offset, len, crc };\n    startAckTimer(lastSent);\n  } catch(e){ \n    setTextNode('status', `发送失败：${e.message}`); \n    throw e; \n  }\n}\n\n/** ============ ACK 定时/重试 ============ */\nfunction startAckTimer(last=null){ \n  clearAckTimer(); \n  if (last) lastSent = last; \n  ackTimer = setTimeout(async ()=>{\n    if (!started) return; \n    retryCount++;\n    if (retryCount <= MAX_RETRIES){\n      if (lastSent?.type==='chunk'){\n        const old = CHUNK_SIZE; \n        CHUNK_SIZE = Math.max(MIN_CHUNK, Math.floor(CHUNK_SIZE/2));\n        setTextNode('status', `未收到 ACK，重试#${retryCount}，分片 ${old}→${CHUNK_SIZE}`);\n        try{ await sendChunk(lastSent.offset); } \n        catch(e){ setTextNode('status', `重发失败：${e.message}`); started=false; }\n      } else {\n        setTextNode('status', `未收到 ACK，重发 meta（#${retryCount}）…`);\n        try{ await sendMeta(); } \n        catch(e){ setTextNode('status', `重发 meta 失败：${e.message}`); started=false; }\n      }\n    } else { \n      setTextNode('status','多次重试失败'); \n      started=false; \n    }\n  }, ACK_TIMEOUT); \n}\n\nfunction clearAckTimer(){ if (ackTimer){ clearTimeout(ackTimer); ackTimer=null; } }\n\nfunction resetState(){ \n  started=false; totalSize=0;\n  compiledBuffer=null; compiledName=\"\"; \n  clearAckTimer(); retryCount=0; \n  CHUNK_SIZE = DEFAULT_CHUNK;\n}\n\n/** ============ 工具：UTF-8 / Base64 / BIN 构建 ============ */\nfunction extractErr(err){ try{ if(err==null) return '未知错误'; if(typeof err==='string') return err; if(err.message) return err.message; if(err.msg) return err.msg; if(err.errMsg) return err.errMsg; return JSON.stringify(err); }catch(_){ return String(err); } }\nfunction getFileName(p){ return (p||'').replace(/\\\\/g,'/').split('/').pop()||''; }\nfunction bytesToMB(b){ return (b/1024/1024).toFixed(2); }\n\nfunction decodeUtf8(bytes){ \n  let out=\"\"; \n  for(let i=0;i<bytes.length;i++){ \n    const b0=bytes[i]; \n    if(b0<0x80){ out+=String.fromCharCode(b0); continue; } \n    if((b0&0xe0)===0xc0 && i+1<bytes.length){ const b1=bytes[++i]; out+=String.fromCharCode(((b0&0x1f)<<6)|(b1&0x3f)); continue; } \n    if((b0&0xf0)===0xe0 && i+2<bytes.length){ const b1=bytes[++i], b2=bytes[++i]; out+=String.fromCharCode(((b0&0x0f)<<12)|((b1&0x3f)<<6)|(b2&0x3f)); continue; } \n    if((b0&0xf8)===0xf0 && i+3<bytes.length){ const b1=bytes[++i], b2=bytes[++i], b3=bytes[++i]; let cp=((b0&7)<<18)|((b1&0x3f)<<12)|((b2&0x3f)<<6)|(b3&0x3f); cp-=0x10000; out+=String.fromCharCode(0xd800+(cp>>10)); out+=String.fromCharCode(0xdc00+(cp&0x3ff)); continue; } \n    out+=\"\\uFFFD\";\n  } \n  return out; \n}\n\nfunction encodeUtf8(str){ \n  const out=[]; \n  for(let i=0;i<str.length;i++){ \n    let cp=str.charCodeAt(i); \n    if(cp>=0xd800&&cp<=0xdbff && i+1<str.length){ \n      const n=str.charCodeAt(++i); \n      if(n>=0xdc00&&n<=0xdfff){ cp=((cp-0xd800)<<10)+(n-0xdc00)+0x10000; } \n      else i--; \n    } \n    if(cp<=0x7F) out.push(cp); \n    else if(cp<=0x7FF){ out.push(0xC0 | (cp>>6)); out.push(0x80 | (cp & 0x3F)); } \n    else if(cp<=0xFFFF){ out.push(0xE0 | (cp>>12)); out.push(0x80 | ((cp>>6) & 0x3F)); out.push(0x80 | (cp & 0x3F)); } \n    else { out.push(0xF0 | (cp>>18)); out.push(0x80 | ((cp>>12)&0x3F)); out.push(0x80 | ((cp>>6)&0x3F)); out.push(0x80 | (cp & 0x3F)); } \n  } \n  return Uint8Array.from(out); \n}\n\nfunction u8ToBase64(u8){ \n  let out=\"\", i=0; \n  const CH=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"; \n  while(i<u8.length){ \n    const c1=u8[i++]??0, c2=u8[i++]??NaN, c3=u8[i++]??NaN; \n    const e1=c1>>2, e2=((c1&3)<<4)|((c2||0)>>4), e3=((c2&15)<<2)|((c3||0)>>6), e4=(c3||0)&63; \n    out += CH[e1] + CH[e2] + (isNaN(c2)?\"=\":CH[e3]) + (isNaN(c3)?\"=\":CH[e4]); \n  } \n  return out; \n}\n\nfunction buildBinFromTxtContent(text) {\n\n  const lines = String(text).replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n  const rawEntries = [];\n  for (const raw of lines) {\n    if (!raw) continue;\n    const line = raw.replace(/^\\uFEFF/, \"\").replace(/\\u00A0/g, \" \").replace(/\\u3000/g, \" \");\n    const parts = line.split(\"\\t\");\n    if (parts.length < 6) continue;\n\n    const unitNum = (parts[1] ?? \"\").trim();\n    const word    = (parts[2] ?? \"\").trim();\n    const kanji   = (parts[3] ?? \"\").trim();\n    const tone    = (parts[4] ?? \"\").trim();\n    const explain = (parts[5] ?? \"\").trim();\n    const eg      = parts.slice(6).join(\"\\t\").trim();\n\n    rawEntries.push({ unitNum, word, kanji, tone, explain, eg });\n  }\n\n  const entries = rawEntries.slice().sort((a, b) => Number(a.unitNum) - Number(b.unitNum));\n  const totalWords = entries.length >>> 0;\n\n  const unitIndex = new Map();\n  let lastUnit = null;\n  for (let i = 0; i < entries.length; i++) {\n    const u = entries[i].unitNum;\n    if (u !== lastUnit) {\n      unitIndex.set(u, { firstIndex: i, count: 1 });\n      lastUnit = u;\n    } else {\n      unitIndex.get(u).count++;\n    }\n  }\n  const unitKeys = Array.from(unitIndex.keys()).sort((a, b) => Number(a) - Number(b));\n  const numUnits = unitKeys.length >>> 0;\n\n  const dataChunks = [];\n  const offsets = new Array(totalWords);\n  const lengths = new Array(totalWords);\n  let dataLen = 0;\n\n  for (let i = 0; i < totalWords; i++) {\n    const it = entries[i];\n    const rec = `${it.unitNum}&${it.word}&${it.kanji}&${it.tone}&${it.explain}&${it.eg}\\n`;\n    const bytes = encodeUtf8(rec);\n    offsets[i] = dataLen >>> 0;\n    lengths[i] = bytes.length >>> 0;\n    dataLen += bytes.length;\n    dataChunks.push(bytes);\n  }\n\n  const unitIndexSize = 2 + numUnits * 10;\n  const newIndexOffset = 8 + unitIndexSize;\n  const originalIndexTableSize = totalWords * 12;\n  const headerAndTablesSize = newIndexOffset + originalIndexTableSize;\n  const totalSizeBytes = headerAndTablesSize + dataLen;\n\n  const buf = new ArrayBuffer(totalSizeBytes);\n  const view = new DataView(buf);\n  let pos = 0;\n\n  // header\n  view.setUint32(pos, totalWords, true); pos += 4;\n  view.setUint32(pos, newIndexOffset >>> 0, true); pos += 4;\n\n  // unit index\n  view.setUint16(pos, numUnits, true); pos += 2;\n  for (const key of unitKeys) {\n    const unit = Number(key) >>> 0;\n    const { firstIndex, count } = unitIndex.get(key);\n    view.setUint16(pos, unit, true); pos += 2;\n    view.setUint32(pos, count >>> 0, true); pos += 4;\n    view.setUint32(pos, firstIndex >>> 0, true); pos += 4;\n  }\n\n  // 原始索引表\n  for (let i = 0; i < totalWords; i++) {\n    view.setUint32(pos, offsets[i] >>> 0, true); pos += 4;\n    view.setUint32(pos, lengths[i] >>> 0, true); pos += 4;\n    view.setUint32(pos, 0, true); pos += 4; // 预留\n  }\n\n  // data\n  const out = new Uint8Array(buf);\n  for (const chunk of dataChunks) { out.set(chunk, pos); pos += chunk.length; }\n  return out;\n}\n","export function read() {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.readConfig) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(globalThis.AstroBox.config.readConfig());\n    }\n    else {\n        throw new Error('AstroBox.config.readConfig not available on native side');\n    }\n}\nexport function write(content) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.writeConfig) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.config.writeConfig(JSON.stringify(content));\n    }\n    else {\n        throw new Error('AstroBox.config.writeConfig not available on native side');\n    }\n}\n","export function uint8ArrayToBase64(bytes) {\n    const base64abc = [\n        \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\",\n        \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n        \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\",\n        \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n        \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"+\", \"/\"\n    ];\n    let result = '', i;\n    const l = bytes.length;\n    for (i = 2; i < l; i += 3) {\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n        result += base64abc[((bytes[i - 1] & 0x0f) << 2) | (bytes[i] >> 6)];\n        result += base64abc[bytes[i] & 0x3f];\n    }\n    if (i === l + 1) {\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[(bytes[i - 2] & 0x03) << 4];\n        result += '==';\n    }\n    if (i === l) {\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n        result += base64abc[(bytes[i - 1] & 0x0f) << 2];\n        result += '=';\n    }\n    return result;\n}\nexport function base64ToUint8Array(base64) {\n    base64 = base64.replace(/[\\r\\n\\s]/g, '');\n    if (base64.length % 4 !== 0) {\n        throw new Error('Invalid base64 string length');\n    }\n    const table = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    let padding = 0;\n    if (base64.endsWith('=='))\n        padding = 2;\n    else if (base64.endsWith('='))\n        padding = 1;\n    const byteLength = (base64.length / 4) * 3 - padding;\n    const arr = new Uint8Array(byteLength);\n    let byteIdx = 0;\n    for (let i = 0; i < base64.length; i += 4) {\n        const n = (table.indexOf(base64[i]) << 18) |\n            (table.indexOf(base64[i + 1]) << 12) |\n            (table.indexOf(base64[i + 2]) << 6) |\n            table.indexOf(base64[i + 3]);\n        if (byteIdx < byteLength)\n            arr[byteIdx++] = (n >> 16) & 0xff;\n        if (byteIdx < byteLength)\n            arr[byteIdx++] = (n >> 8) & 0xff;\n        if (byteIdx < byteLength)\n            arr[byteIdx++] = n & 0xff;\n    }\n    return arr;\n}\nexport function uint8ArrayToString(arr) {\n    let out = '';\n    let i = 0;\n    while (i < arr.length) {\n        const byte1 = arr[i++];\n        if (byte1 < 0x80) {\n            out += String.fromCharCode(byte1);\n        }\n        else if (byte1 >= 0xc0 && byte1 < 0xe0) {\n            const byte2 = arr[i++];\n            out += String.fromCharCode(((byte1 & 0x1f) << 6) | (byte2 & 0x3f));\n        }\n        else if (byte1 >= 0xe0 && byte1 < 0xf0) {\n            const byte2 = arr[i++];\n            const byte3 = arr[i++];\n            out += String.fromCharCode(((byte1 & 0x0f) << 12) | ((byte2 & 0x3f) << 6) | (byte3 & 0x3f));\n        }\n        else {\n            // 4字节转为utf-16代理对\n            const byte2 = arr[i++];\n            const byte3 = arr[i++];\n            const byte4 = arr[i++];\n            let codepoint = ((byte1 & 0x07) << 18) |\n                ((byte2 & 0x3f) << 12) |\n                ((byte3 & 0x3f) << 6) |\n                (byte4 & 0x3f);\n            codepoint -= 0x10000;\n            out += String.fromCharCode(0xd800 + (codepoint >> 10), 0xdc00 + (codepoint & 0x3ff));\n        }\n    }\n    return out;\n}\nexport function stringToUint8Array(str) {\n    const arr = [];\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n        if (code < 0x80) {\n            arr.push(code);\n        }\n        else if (code < 0x800) {\n            arr.push(0xc0 | (code >> 6));\n            arr.push(0x80 | (code & 0x3f));\n        }\n        else if (code >= 0xd800 && code <= 0xdbff) {\n            // 代理对\n            const next = str.charCodeAt(++i);\n            const codepoint = ((code - 0xd800) << 10) + (next - 0xdc00) + 0x10000;\n            arr.push(0xf0 | (codepoint >> 18));\n            arr.push(0x80 | ((codepoint >> 12) & 0x3f));\n            arr.push(0x80 | ((codepoint >> 6) & 0x3f));\n            arr.push(0x80 | (codepoint & 0x3f));\n        }\n        else {\n            arr.push(0xe0 | (code >> 12));\n            arr.push(0x80 | ((code >> 6) & 0x3f));\n            arr.push(0x80 | (code & 0x3f));\n        }\n    }\n    return new Uint8Array(arr);\n}\n","import { uint8ArrayToBase64 } from \"../utils.js\";\nexport async function sendRaw(data) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.sendRaw) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.debug.sendRaw(uint8ArrayToBase64(data));\n    }\n    else {\n        throw new Error('AstroBox.debug.sendRaw not available on native side');\n    }\n}\n","export function getDeviceList() {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.getDeviceList) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(globalThis.AstroBox.device.getDeviceList());\n    }\n    else {\n        throw new Error('AstroBox.device.getDeviceList not available on native side');\n    }\n}\nexport function getDeviceState(addr) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.getDeviceState) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(globalThis.AstroBox.device.getDeviceState(addr));\n    }\n    throw new Error(\"AstroBox.device.getDeviceState not available on native side\");\n}\nexport function modifyDeviceState(addr, state) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.modifyDeviceState) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.device.modifyDeviceState(addr, JSON.stringify(state));\n    }\n    else {\n        throw new Error(\"AstroBox.device.modifyDeviceState not available on native side\");\n    }\n}\nexport async function disconnectDevice() {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.disconnectDevice) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.device.disconnectDevice();\n    }\n    else {\n        throw new Error(\"AstroBox.device.disconnectDevice not available on native side\");\n    }\n}\n","export function addEventListener(eventName, callback) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.event) === null || _b === void 0 ? void 0 : _b.addEventListener) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.event.addEventListener(eventName, callback);\n    }\n    else {\n        throw new Error(\"AstroBox.event.addEventListener not available\");\n    }\n}\nexport function removeEventListener(eventName) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.event) === null || _b === void 0 ? void 0 : _b.removeEventListener) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.event.removeEventListener(eventName);\n    }\n    else {\n        throw new Error(\"AstroBox.event.removeEventListener not available\");\n    }\n}\nexport function sendEvent(eventName, payload) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.event) === null || _b === void 0 ? void 0 : _b.sendEvent) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.event.sendEvent(eventName, payload);\n    }\n    else {\n        throw new Error(\"AstroBox.event.sendEvent not available\");\n    }\n}\n","import { base64ToUint8Array } from \"../utils.js\";\nexport async function pickFile(options) {\n    var _a, _b;\n    const options_ = {\n        decode_text: false,\n        encoding: \"undefined\",\n        ...options\n    };\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.filesystem) === null || _b === void 0 ? void 0 : _b.pickFile) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(await globalThis.AstroBox.filesystem.pickFile(JSON.stringify(options_)));\n    }\n    else {\n        throw new Error(\"AstroBox.filesystem.pickFile not available\");\n    }\n}\nexport async function readFile(path, options) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.filesystem) === null || _b === void 0 ? void 0 : _b.readFile) === \"function\") {\n        let options_ = {\n            offset: 0,\n            decode_text: true,\n            ...options\n        };\n        // @ts-ignore\n        var result = await globalThis.AstroBox.filesystem.readFile(path, JSON.stringify(options_));\n        if (options_.decode_text) {\n            return result;\n        }\n        return base64ToUint8Array(result);\n    }\n    else {\n        throw new Error(\"AstroBox.filesystem.readFile not available\");\n    }\n}\nexport async function unloadFile(path) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.filesystem) === null || _b === void 0 ? void 0 : _b.unloadFile) === \"function\") {\n        // @ts-ignore\n        return await globalThis.AstroBox.filesystem.unloadFile(path);\n    }\n    else {\n        throw new Error(\"AstroBox.filesystem.unloadFile not available\");\n    }\n}\n","// @ts-ignore\nfunction call(name, file) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.installer) === null || _b === void 0 ? void 0 : _b[name]) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.installer[name](file);\n    }\n    else {\n        // @ts-ignore\n        throw new Error(`AstroBox.installer.${name} not available`);\n    }\n}\nexport const addThirdPartyAppToQueue = (f) => call(\"addThirdPartyAppToQueue\", f);\nexport const addWatchFaceToQueue = (f) => call(\"addWatchFaceToQueue\", f);\nexport const addFirmwareToQueue = (f) => call(\"addFirmwareToQueue\", f);\n","__webpack_require__.rv = () => (\"1.4.10\")","__webpack_require__.ruid = \"bundler=rspack@1.4.10\";\n","export async function sendQAICMessage(pkgName, data) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.interconnect) === null || _b === void 0 ? void 0 : _b.sendQAICMessage) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.interconnect.sendQAICMessage(pkgName, data);\n    }\n    else {\n        throw new Error(\"AstroBox.interconnect.sendQAICMessage not available\");\n    }\n}\n","export function onLoad(cb) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.lifecycle) === null || _b === void 0 ? void 0 : _b.onLoad) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.lifecycle.onLoad(cb);\n    }\n    else {\n        throw new Error(\"AstroBox.lifecycle.onLoad not available\");\n    }\n}\n","export function regNativeFun(func) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.native) === null || _b === void 0 ? void 0 : _b.regNativeFun) === \"function\") {\n        // @ts-ignore\n        return globalThis.AstroBox.native.regNativeFun(func);\n    }\n    throw new Error(\"AstroBox.native.regNativeFun not available\");\n}\n","import { base64ToUint8Array, uint8ArrayToBase64 } from \"../utils.js\";\nexport async function fetch(url, options) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.network) === null || _b === void 0 ? void 0 : _b.fetch) === \"function\") {\n        // @ts-ignore\n        options.body_encoded = typeof options.body !== \"string\";\n        // @ts-ignore\n        options.body = options.body ? (options.body_encoded ? uint8ArrayToBase64(options.body) : options.body) : \"\";\n        // @ts-ignore\n        let ret = await globalThis.AstroBox.network.fetch(url, JSON.stringify({ raw: false, ...options }));\n        ret.body = options.raw ? base64ToUint8Array(ret.body) : ret.body;\n        return ret;\n    }\n    throw new Error(\"AstroBox.network.fetch not available\");\n}\n","export async function registerCommunityProvider(provider) {\n    var _a, _b;\n    // @ts-ignore\n    if (\n    // @ts-ignore\n    typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.provider) === null || _b === void 0 ? void 0 : _b.registerCommunityProvider) ===\n        \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.provider.registerCommunityProvider(JSON.stringify(provider));\n    }\n    else {\n        throw new Error(\"AstroBox.provider.registerCommunityProvider not available\");\n    }\n}\n","export async function launchQA(appInfo, pageName) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.thirdpartyapp) === null || _b === void 0 ? void 0 : _b.launchQA) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.thirdpartyapp.launchQA(JSON.stringify(appInfo), pageName);\n    }\n    else {\n        throw new Error(\"AstroBox.thirdpartyapp.launchQA not available\");\n    }\n}\nexport async function getThirdPartyAppList() {\n    var _a, _b;\n    // @ts-ignore\n    if (\n    // @ts-ignore\n    typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.thirdpartyapp) === null || _b === void 0 ? void 0 : _b.getThirdPartyAppList) ===\n        \"function\") {\n        // @ts-ignore\n        const raw = await globalThis.AstroBox.thirdpartyapp.getThirdPartyAppList();\n        return JSON.parse(raw);\n    }\n    throw new Error(\"AstroBox.thirdpartyapp.getThirdPartyAppList not available\");\n}\n","// @ts-ignore\nfunction call(name, arg) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.ui) === null || _b === void 0 ? void 0 : _b[name]) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.ui[name](arg);\n    }\n    else {\n        // @ts-ignore\n        throw new Error(`AstroBox.ui.${name} not available`);\n    }\n}\nexport const updatePluginSettingsUI = (ui) => call(\"updatePluginSettingsUI\", JSON.stringify(ui));\nexport const openPageWithNodes = (ui) => call(\"openPageWithNodes\", JSON.stringify(ui));\nexport const openPageWithUrl = (url) => call(\"openPageWithUrl\", url);\n","import { initApis } from \"./init.js\";\nconst AstroBox = {};\ninitApis(AstroBox);\nexport default AstroBox;\n","import * as configImpl from \"./impls/config.js\";\nimport * as debugImpl from \"./impls/debug.js\";\nimport * as deviceImpl from \"./impls/device.js\";\nimport * as eventImpl from \"./impls/event.js\";\nimport * as filesystemImpl from \"./impls/filesystem.js\";\nimport * as installerImpl from \"./impls/installer.js\";\nimport * as interconnectImpl from \"./impls/interconnect.js\";\nimport * as lifecycleImpl from \"./impls/lifecycle.js\";\nimport * as nativeImpl from \"./impls/native.js\";\nimport * as networkImpl from \"./impls/network.js\";\nimport * as providerImpl from \"./impls/provider.js\";\nimport * as thirdpartyImpl from \"./impls/thirdpartyapp.js\";\nimport * as uiImpl from \"./impls/ui.js\";\nexport function initApis(AstroBox) {\n    // Config APIs\n    AstroBox.config = {};\n    AstroBox.config.readConfig = configImpl.read;\n    AstroBox.config.writeConfig = configImpl.write;\n    // Debug APIs\n    AstroBox.debug = {};\n    AstroBox.debug.sendRaw = debugImpl.sendRaw;\n    // Device APIs\n    AstroBox.device = {};\n    AstroBox.device.getDeviceList = deviceImpl.getDeviceList;\n    AstroBox.device.getDeviceState = deviceImpl.getDeviceState;\n    AstroBox.device.modifyDeviceState = deviceImpl.modifyDeviceState;\n    AstroBox.device.disconnectDevice = deviceImpl.disconnectDevice;\n    // Event APIs\n    AstroBox.event = {};\n    AstroBox.event.addEventListener = eventImpl.addEventListener;\n    AstroBox.event.removeEventListener = eventImpl.removeEventListener;\n    AstroBox.event.sendEvent = eventImpl.sendEvent;\n    // Installer APIs\n    AstroBox.installer = {};\n    AstroBox.installer.addThirdPartyAppToQueue = installerImpl.addThirdPartyAppToQueue;\n    AstroBox.installer.addWatchFaceToQueue = installerImpl.addWatchFaceToQueue;\n    AstroBox.installer.addFirmwareToQueue = installerImpl.addFirmwareToQueue;\n    // Interconnect APIs\n    AstroBox.interconnect = {};\n    AstroBox.interconnect.sendQAICMessage = interconnectImpl.sendQAICMessage;\n    // Lifecycle APIs\n    AstroBox.lifecycle = {};\n    AstroBox.lifecycle.onLoad = lifecycleImpl.onLoad;\n    // Native APIs\n    AstroBox.native = {};\n    AstroBox.native.regNativeFun = nativeImpl.regNativeFun;\n    // Network APIs\n    AstroBox.network = {};\n    AstroBox.network.fetch = networkImpl.fetch;\n    // Provider APIs\n    AstroBox.provider = {};\n    AstroBox.provider.registerCommunityProvider = providerImpl.registerCommunityProvider;\n    // Third-Party App APIs\n    AstroBox.thirdpartyapp = {};\n    AstroBox.thirdpartyapp.launchQA = thirdpartyImpl.launchQA;\n    AstroBox.thirdpartyapp.getThirdPartyAppList = thirdpartyImpl.getThirdPartyAppList;\n    // UI APIs\n    AstroBox.ui = {};\n    AstroBox.ui.updatePluginSettingsUI = uiImpl.updatePluginSettingsUI;\n    AstroBox.ui.openPageWithNodes = uiImpl.openPageWithNodes;\n    AstroBox.ui.openPageWithUrl = uiImpl.openPageWithUrl;\n    // FileSystem APIs\n    AstroBox.filesystem = {};\n    AstroBox.filesystem.pickFile = filesystemImpl.pickFile;\n    AstroBox.filesystem.readFile = filesystemImpl.readFile;\n    AstroBox.filesystem.unloadFile = filesystemImpl.unloadFile;\n}\n"],"names":["ui","read","_a","_b","globalThis","JSON","Error","write","content","uint8ArrayToBase64","bytes","base64abc","result","i","l","base64ToUint8Array","base64","table","padding","byteLength","arr","Uint8Array","byteIdx","n","sendRaw","data","getDeviceList","getDeviceState","addr","modifyDeviceState","state","disconnectDevice","addEventListener","eventName","callback","removeEventListener","sendEvent","payload","pickFile","options","options_","readFile","path","unloadFile","call","name","file","addThirdPartyAppToQueue","f","addWatchFaceToQueue","addFirmwareToQueue","sendQAICMessage","pkgName","onLoad","cb","regNativeFun","func","fetch","url","ret","registerCommunityProvider","provider","launchQA","appInfo","pageName","getThirdPartyAppList","arg","updatePluginSettingsUI","openPageWithNodes","openPageWithUrl","AstroBox","initApis","configImpl","debugImpl","deviceImpl","eventImpl","installerImpl","interconnectImpl","lifecycleImpl","nativeImpl","networkImpl","providerImpl","thirdpartyImpl","uiImpl","filesystemImpl","BAND_PKG","CHUNK_SIZE","totalSize","started","ackTimer","retryCount","compiledBuffer","compiledName","startTime","lastAckTime","lastAckBytes","lastSendTs","lastSent","pickId","onPick","sendId","onSendFile","setTextNode","nodeId","value","onListen","raw","handleAck","picked","resetState","totalLen","u8All","readFileChunked","done","text","decodeUtf8","out","b0","String","b1","b2","cp","b3","buildBinFromTxtContent","lines","rawEntries","_parts_","_parts_1","_parts_2","_parts_3","_parts_4","parts","line","unitNum","word","kanji","tone","explain","eg","entries","a","b","Number","totalWords","unitIndex","Map","lastUnit","u","unitKeys","Array","numUnits","dataChunks","offsets","lengths","dataLen","it","encodeUtf8","newIndexOffset","originalIndexTableSize","buf","ArrayBuffer","headerAndTablesSize","view","DataView","pos","key","unit","firstIndex","count","chunk","getFileName","p","bytesToMB","e","extractErr","err","_","chunkSize","onProgress","chunks","off","res","need","Math","u8","s","c","apps","Date","sendMeta","pkg","clearAckTimer","next","now","dt","cur","db","avg","sendChunk","startAckTimer","throttleForRate","wait","minInterval","TARGET_KBPS","Promise","r","setTimeout","offset","len","remain","slice","crc","crc32","k","b64","u8ToBase64","CH","_u8_","_u8_1","_u8_2","c1","c2","NaN","c3","e1","e2","e3","e4","isNaN","old","console","last","clearTimeout","str"],"mappings":"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"}