{"version":3,"file":"main.js","sources":["webpack://astrobox-plugin-template/./src/index.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/config.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/utils.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/debug.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/device.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/event.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/filesystem.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/installer.js","webpack://astrobox-plugin-template/webpack/runtime/rspack_version","webpack://astrobox-plugin-template/webpack/runtime/rspack_unique_id","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/interconnect.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/lifecycle.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/native.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/network.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/provider.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/thirdpartyapp.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/impls/ui.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/index.js","webpack://astrobox-plugin-template/./node_modules/astrobox-plugin-sdk/dist/init.js"],"sourcesContent":["import AstroBox from \"astrobox-plugin-sdk\";\n\nlet totalSize = 0;       \nlet nextOffset = 0;              \nconst CHUNK_SIZE = 4096;         \nconst BAND_PKG = \"com.tse.watch.jlpt\";\nlet started = false;                \nlet ackTimer = null;           \nlet retryCount = 0;              \nconst MAX_RETRIES = 3;\nconst ACK_TIMEOUT = 3000;           \n\n\nlet compiledBuffer = null;  \nlet compiledName = \"\";  \n\nlet pickId = AstroBox.native.regNativeFun(onPick);\nlet sendId = AstroBox.native.regNativeFun(onSendFile);\nlet ui;\n\nAstroBox.lifecycle.onLoad(() => {\n  ui = [\n    {\n      node_id: \"pickBtn\",\n      visibility: true,\n      disabled: false,\n      content: {\n        type: \"Button\",\n        value: {\n          primary: true,\n          text: \"选择 .txt 文件\",\n          callback_fun_id: pickId,\n        },\n      },\n    },\n    {\n      node_id: \"sendBtn\",\n      visibility: true,\n      disabled: false,\n      content: {\n        type: \"Button\",\n        value: {\n          primary: true,\n          text: \"发送文件\",\n          callback_fun_id: sendId,\n        },\n      },\n    },\n    {\n      node_id: \"status\",\n      visibility: true,\n      disabled: false,\n      content: {\n        type: \"Text\",\n        value: \"就绪，可发送\",\n      },\n    },\n  ];\n\n  AstroBox.ui.updatePluginSettingsUI(ui);\n  onListen();\n});\n\nasync function onListen() {\n  AstroBox.event.addEventListener(`onQAICMessage_${BAND_PKG}`, (raw) => {\n    handleAck(raw);\n  });\n}\n\nasync function onPick() {\n  try {\n    const picked = await AstroBox.filesystem.pickFile({ decode_text: true, encoding: 'utf-8' });\n    resetState();\n\n    if (!picked) {\n      updateStatus(\"已取消选择\");\n      return;\n    }\n\n    const path = picked.path || picked.filePath || picked.uri || \"\";\n    if (!path) {\n      updateStatus(\"选择到的文件没有路径信息\");\n      return;\n    }\n\n    if (!/\\.txt$/i.test(path)) {\n      updateStatus(\"仅支持选择 .txt 文件\");\n      return;\n    }\n\n    const raw = await AstroBox.filesystem.readFile(path, {len:picked.text_len});\n    const text = await toText(raw);\n\n    const bin = buildBinFromTxtContent(text);\n    compiledBuffer = bin;\n    totalSize = bin.byteLength >>> 0;\n    compiledName = getFileName(path).replace(/\\.txt$/i, \".bin\");\n    updateStatus(`已从 ${getFileName(path)} 构建${compiledName}，大小 ${bytesToMB(totalSize)} MB`);\n  } catch (err) {\n    updateStatus(`选择文件失败: ${extractErr(err)}`);\n  }\n}\n\nasync function onSendFile() {\n  const apps = await AstroBox.thirdpartyapp.getThirdPartyAppList();\n  const installed = apps.find((a) => a.package_name === BAND_PKG);\n  if (!installed) {\n    updateStatus(`未检测到 ${BAND_PKG}`);\n    return;\n  }\n\n  if (!compiledBuffer) {\n    updateStatus(\"请先选择 .txt（自动编译）\");\n    return;\n  }\n\n  if (started) {\n    updateStatus(\"正在传输中，请勿重复点击\");\n    return;\n  }\n\n  started = true;\n  retryCount = 0;\n  nextOffset = 0;\n\n  try {\n    await sendMeta();\n    updateStatus(\"已发送 meta，等待手环 ACK…\");\n  } catch (e) {\n    started = false;\n    updateStatus(`sendMeta 失败：${e.message}`);\n  }\n}\n\nasync function handleAck(raw) {\n  try {\n    const pkg = JSON.parse(raw);\n\n    switch (pkg.cmd) {\n      case \"ack\": {\n        clearAckTimer();\n        retryCount = 0;\n        nextOffset = pkg.offset >>> 0; \n\n        if (nextOffset < totalSize) {\n          await sendChunk(nextOffset);\n          updateStatus(`已发送 ${bytesToMB(nextOffset)}/${bytesToMB(totalSize)} MB`);\n        } else {\n          await AstroBox.interconnect.sendQAICMessage(\n            BAND_PKG,\n            JSON.stringify({ cmd: \"done\" })\n          );\n        }\n        break; \n      }\n\n      case \"done\": {\n        clearAckTimer();\n        updateStatus(\"传输成功！手环已确认。\");\n        resetState();\n        break;\n      }\n\n      default: {\n        updateStatus(`收到未知命令: ${pkg.cmd}`);\n        break;\n      }\n    }\n  } catch (e) {\n    updateStatus(`解析 ACK 失败：${e.message}`);\n  }\n}\n\nasync function sendMeta() {\n  const payload = JSON.stringify({ cmd: \"meta\", size: totalSize });\n  await AstroBox.interconnect.sendQAICMessage(BAND_PKG, payload);\n  startAckTimer();\n}\n\nasync function sendChunk(offset) {\n  const len = Math.min(CHUNK_SIZE, totalSize - offset);\n  const chunk = compiledBuffer.subarray(offset, offset + len);\n\n  const payload = JSON.stringify({\n    cmd: \"chunk\",\n    offset: offset >>> 0,\n    total: totalSize >>> 0,\n    data: Array.from(chunk),\n  });\n\n  await AstroBox.interconnect.sendQAICMessage(BAND_PKG, payload);\n  startAckTimer();\n}\n\nfunction updateStatus(text) {\n  ui[2].content.value = text;\n  AstroBox.ui.updatePluginSettingsUI(ui);\n}\n\nfunction getFileName(p) {\n  if (!p) return \"\";\n  return p.replace(/\\\\/g, \"/\").split(\"/\").pop() || \"\";\n}\n\nfunction bytesToMB(bytes) {\n  return (bytes / 1024 / 1024).toFixed(2);\n}\n\nfunction startAckTimer() {\n  clearAckTimer();\n  ackTimer = setTimeout(async () => {\n    if (!started) return;\n    if (retryCount < MAX_RETRIES) {\n      retryCount++;\n      updateStatus(`未收到 ACK，重试第 ${retryCount} 次…`);\n      try { await sendMeta(); } catch (e) {\n        updateStatus(`重发 meta 失败：${e.message}`);\n        started = false;\n      }\n    } else {\n      updateStatus(\"多次重试仍未收到 ACK，传输失败\");\n      started = false;\n    }\n  }, ACK_TIMEOUT);\n}\n\nfunction clearAckTimer() {\n  if (ackTimer) { clearTimeout(ackTimer); ackTimer = null; }\n}\n\nfunction resetState() {\n  started = false;\n  totalSize = 0;\n  nextOffset = 0;\n  compiledBuffer = null;\n  compiledName = \"\";\n  clearAckTimer();\n  retryCount = 0;\n}\n\nfunction extractErr(err) {\n  try {\n    if (err == null) return \"未知错误(null/undefined)\";\n    if (typeof err === \"string\") return err;\n    if (err.message) return err.message;\n    if (err.msg) return err.msg;\n    if (err.errMsg) return err.errMsg;\n    return JSON.stringify(err);\n  } catch (_) { return String(err); }\n}\n\nasync function toText(res) {\n  if (typeof res === \"string\") return res;\n  if (res && typeof res.text === \"string\") return res.text;\n  if (res && res.buffer instanceof ArrayBuffer) {\n    const u8 = new Uint8Array(res.buffer, res.byteOffset || 0, res.byteLength || res.buffer.byteLength);\n    return decodeUtf8(u8);\n  }\n  if (res instanceof Uint8Array) return decodeUtf8(res);\n  return String(res ?? \"\");\n}\n\n\nfunction decodeUtf8(bytes){\n  let out = \"\";\n  const len = bytes.length;\n  for (let i=0;i<len;i++){\n    const b0 = bytes[i];\n    if (b0 < 0x80){ out += String.fromCharCode(b0); continue; }\n    if ((b0 & 0xe0) === 0xc0 && i+1 < len){\n      const b1 = bytes[++i];\n      out += String.fromCharCode(((b0 & 0x1f)<<6)|(b1&0x3f));\n      continue;\n    }\n    if ((b0 & 0xf0) === 0xe0 && i+2 < len){\n      const b1 = bytes[++i], b2 = bytes[++i];\n      out += String.fromCharCode(((b0 & 0x0f)<<12)|((b1&0x3f)<<6)|(b2&0x3f));\n      continue;\n    }\n    if ((b0 & 0xf8) === 0xf0 && i+3 < len){\n      const b1 = bytes[++i], b2 = bytes[++i], b3 = bytes[++i];\n      let cp = ((b0&0x07)<<18)|((b1&0x3f)<<12)|((b2&0x3f)<<6)|(b3&0x3f);\n      cp -= 0x10000;\n      out += String.fromCharCode(0xd800 + (cp>>10));\n      out += String.fromCharCode(0xdc00 + (cp & 0x3ff));\n      continue;\n    }\n    out += \"\\uFFFD\";\n  }\n  return out;\n}\n\nfunction encodeUtf8(str){\n  const out = [];\n  for (let i = 0; i < str.length; i++) {\n    let codePoint = str.charCodeAt(i);\n    if (codePoint >= 0xd800 && codePoint <= 0xdbff && i+1 < str.length) {\n      const next = str.charCodeAt(i+1);\n      if (next >= 0xdc00 && next <= 0xdfff){\n        codePoint = ((codePoint - 0xd800) << 10) + (next - 0xdc00) + 0x10000;\n        i++;\n      }\n    }\n    if (codePoint <= 0x7F){ out.push(codePoint); }\n    else if (codePoint <= 0x7FF){\n      out.push(0xC0 | (codePoint >> 6));\n      out.push(0x80 | (codePoint & 0x3F));\n    } else if (codePoint <= 0xFFFF){\n      out.push(0xE0 | (codePoint >> 12));\n      out.push(0x80 | ((codePoint >> 6) & 0x3F));\n      out.push(0x80 | (codePoint & 0x3F));\n    } else {\n      out.push(0xF0 | (codePoint >> 18));\n      out.push(0x80 | ((codePoint >> 12) & 0x3F));\n      out.push(0x80 | ((codePoint >> 6) & 0x3F));\n      out.push(0x80 | (codePoint & 0x3F));\n    }\n  }\n  return Uint8Array.from(out);\n}\n\nfunction buildBinFromTxtContent(text) {\n  const lines = String(text).replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n  const entries = [];\n  const unitMap = new Map();\n\n  for (const raw of lines) {\n    if (!raw) continue; \n    const line = raw.replace(/\\uFEFF/g, \"\"); \n    const parts = line.split(\"\\t\");\n    if (parts.length < 6) continue;\n\n    const unitNum = (parts[0] ?? \"\").trim();\n    const word    = (parts[1] ?? \"\").trim();\n    const kanji   = (parts[2] ?? \"\").trim();\n    const tone    = (parts[3] ?? \"\").trim();\n    const explain = (parts[4] ?? \"\").trim();\n    const eg      = parts.slice(5).join(\"\\t\").trim();\n\n    const idx = entries.length;\n    entries.push({ unitNum, word, kanji, tone, explain, eg });\n\n    if (!unitMap.has(unitNum)) unitMap.set(unitNum, { firstIndex: idx, count: 1 });\n    else unitMap.get(unitNum).count++;\n  }\n\n  const totalWords = entries.length >>> 0;\n  const unitKeys = Array.from(unitMap.keys()).sort((a, b) => Number(a) - Number(b));\n  const numUnits = unitKeys.length >>> 0;\n\n\n  const dataChunks = []; \n  const offsets = new Array(totalWords);\n  const lengths = new Array(totalWords);\n  let dataLen = 0;\n\n  for (let i = 0; i < totalWords; i++) {\n    const it = entries[i];\n    const rec = `${it.unitNum}&${it.word}&${it.kanji}&${it.tone}&${it.explain}&${it.eg}\\n`;\n    const bytes = encodeUtf8(rec);\n    offsets[i] = dataLen >>> 0;\n    lengths[i] = bytes.length >>> 0;\n    dataLen += bytes.length;\n    dataChunks.push(bytes);\n  }\n\n  const unitIndexSize = 2 + numUnits * 10; \n  const newIndexOffset = 8 + unitIndexSize;\n  const originalIndexTableSize = totalWords * 12;\n  const headerAndTablesSize = newIndexOffset + originalIndexTableSize;\n  const totalSizeBytes = headerAndTablesSize + dataLen;\n\n\n  const buf = new ArrayBuffer(totalSizeBytes);\n  const view = new DataView(buf);\n  let pos = 0;\n\n  // header\n  view.setUint32(pos, totalWords, true); pos += 4;\n  view.setUint32(pos, newIndexOffset >>> 0, true); pos += 4;\n\n  // unit index table\n  view.setUint16(pos, numUnits, true); pos += 2;\n  for (const key of unitKeys) {\n    const unit = Number(key) >>> 0;\n    const { firstIndex, count } = unitMap.get(key);\n    view.setUint16(pos, unit, true); pos += 2;\n    view.setUint32(pos, count >>> 0, true); pos += 4;\n    view.setUint32(pos, firstIndex >>> 0, true); pos += 4;\n  }\n\n  // original index table\n  for (let i = 0; i < totalWords; i++) {\n    view.setUint32(pos, offsets[i] >>> 0, true); pos += 4;\n    view.setUint32(pos, lengths[i] >>> 0, true); pos += 4;\n    view.setUint32(pos, 0, true); pos += 4;\n  }\n\n  // data section\n  const out = new Uint8Array(buf);\n  for (const chunk of dataChunks) { out.set(chunk, pos); pos += chunk.length; }\n\n  return out; // Uint8Array\n}\n","export function read() {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.readConfig) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(globalThis.AstroBox.config.readConfig());\n    }\n    else {\n        throw new Error('AstroBox.config.readConfig not available on native side');\n    }\n}\nexport function write(content) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.writeConfig) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.config.writeConfig(JSON.stringify(content));\n    }\n    else {\n        throw new Error('AstroBox.config.writeConfig not available on native side');\n    }\n}\n","export function uint8ArrayToBase64(bytes) {\n    const base64abc = [\n        \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\",\n        \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\n        \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\",\n        \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\n        \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"+\", \"/\"\n    ];\n    let result = '', i;\n    const l = bytes.length;\n    for (i = 2; i < l; i += 3) {\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n        result += base64abc[((bytes[i - 1] & 0x0f) << 2) | (bytes[i] >> 6)];\n        result += base64abc[bytes[i] & 0x3f];\n    }\n    if (i === l + 1) {\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[(bytes[i - 2] & 0x03) << 4];\n        result += '==';\n    }\n    if (i === l) {\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n        result += base64abc[(bytes[i - 1] & 0x0f) << 2];\n        result += '=';\n    }\n    return result;\n}\nexport function base64ToUint8Array(base64) {\n    base64 = base64.replace(/[\\r\\n\\s]/g, '');\n    if (base64.length % 4 !== 0) {\n        throw new Error('Invalid base64 string length');\n    }\n    const table = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    let padding = 0;\n    if (base64.endsWith('=='))\n        padding = 2;\n    else if (base64.endsWith('='))\n        padding = 1;\n    const byteLength = (base64.length / 4) * 3 - padding;\n    const arr = new Uint8Array(byteLength);\n    let byteIdx = 0;\n    for (let i = 0; i < base64.length; i += 4) {\n        const n = (table.indexOf(base64[i]) << 18) |\n            (table.indexOf(base64[i + 1]) << 12) |\n            (table.indexOf(base64[i + 2]) << 6) |\n            table.indexOf(base64[i + 3]);\n        if (byteIdx < byteLength)\n            arr[byteIdx++] = (n >> 16) & 0xff;\n        if (byteIdx < byteLength)\n            arr[byteIdx++] = (n >> 8) & 0xff;\n        if (byteIdx < byteLength)\n            arr[byteIdx++] = n & 0xff;\n    }\n    return arr;\n}\nexport function uint8ArrayToString(arr) {\n    let out = '';\n    let i = 0;\n    while (i < arr.length) {\n        const byte1 = arr[i++];\n        if (byte1 < 0x80) {\n            out += String.fromCharCode(byte1);\n        }\n        else if (byte1 >= 0xc0 && byte1 < 0xe0) {\n            const byte2 = arr[i++];\n            out += String.fromCharCode(((byte1 & 0x1f) << 6) | (byte2 & 0x3f));\n        }\n        else if (byte1 >= 0xe0 && byte1 < 0xf0) {\n            const byte2 = arr[i++];\n            const byte3 = arr[i++];\n            out += String.fromCharCode(((byte1 & 0x0f) << 12) | ((byte2 & 0x3f) << 6) | (byte3 & 0x3f));\n        }\n        else {\n            // 4字节转为utf-16代理对\n            const byte2 = arr[i++];\n            const byte3 = arr[i++];\n            const byte4 = arr[i++];\n            let codepoint = ((byte1 & 0x07) << 18) |\n                ((byte2 & 0x3f) << 12) |\n                ((byte3 & 0x3f) << 6) |\n                (byte4 & 0x3f);\n            codepoint -= 0x10000;\n            out += String.fromCharCode(0xd800 + (codepoint >> 10), 0xdc00 + (codepoint & 0x3ff));\n        }\n    }\n    return out;\n}\nexport function stringToUint8Array(str) {\n    const arr = [];\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n        if (code < 0x80) {\n            arr.push(code);\n        }\n        else if (code < 0x800) {\n            arr.push(0xc0 | (code >> 6));\n            arr.push(0x80 | (code & 0x3f));\n        }\n        else if (code >= 0xd800 && code <= 0xdbff) {\n            // 代理对\n            const next = str.charCodeAt(++i);\n            const codepoint = ((code - 0xd800) << 10) + (next - 0xdc00) + 0x10000;\n            arr.push(0xf0 | (codepoint >> 18));\n            arr.push(0x80 | ((codepoint >> 12) & 0x3f));\n            arr.push(0x80 | ((codepoint >> 6) & 0x3f));\n            arr.push(0x80 | (codepoint & 0x3f));\n        }\n        else {\n            arr.push(0xe0 | (code >> 12));\n            arr.push(0x80 | ((code >> 6) & 0x3f));\n            arr.push(0x80 | (code & 0x3f));\n        }\n    }\n    return new Uint8Array(arr);\n}\n","import { uint8ArrayToBase64 } from \"../utils.js\";\nexport async function sendRaw(data) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.debug) === null || _b === void 0 ? void 0 : _b.sendRaw) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.debug.sendRaw(uint8ArrayToBase64(data));\n    }\n    else {\n        throw new Error('AstroBox.debug.sendRaw not available on native side');\n    }\n}\n","export function getDeviceList() {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.getDeviceList) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(globalThis.AstroBox.device.getDeviceList());\n    }\n    else {\n        throw new Error('AstroBox.device.getDeviceList not available on native side');\n    }\n}\nexport function getDeviceState(addr) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.getDeviceState) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(globalThis.AstroBox.device.getDeviceState(addr));\n    }\n    throw new Error(\"AstroBox.device.getDeviceState not available on native side\");\n}\nexport function modifyDeviceState(addr, state) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.modifyDeviceState) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.device.modifyDeviceState(addr, JSON.stringify(state));\n    }\n    else {\n        throw new Error(\"AstroBox.device.modifyDeviceState not available on native side\");\n    }\n}\nexport async function disconnectDevice() {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.device) === null || _b === void 0 ? void 0 : _b.disconnectDevice) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.device.disconnectDevice();\n    }\n    else {\n        throw new Error(\"AstroBox.device.disconnectDevice not available on native side\");\n    }\n}\n","export function addEventListener(eventName, callback) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.event) === null || _b === void 0 ? void 0 : _b.addEventListener) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.event.addEventListener(eventName, callback);\n    }\n    else {\n        throw new Error(\"AstroBox.event.addEventListener not available\");\n    }\n}\nexport function removeEventListener(eventName) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.event) === null || _b === void 0 ? void 0 : _b.removeEventListener) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.event.removeEventListener(eventName);\n    }\n    else {\n        throw new Error(\"AstroBox.event.removeEventListener not available\");\n    }\n}\nexport function sendEvent(eventName, payload) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.event) === null || _b === void 0 ? void 0 : _b.sendEvent) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.event.sendEvent(eventName, payload);\n    }\n    else {\n        throw new Error(\"AstroBox.event.sendEvent not available\");\n    }\n}\n","import { base64ToUint8Array } from \"../utils.js\";\nexport async function pickFile(options) {\n    var _a, _b;\n    const options_ = {\n        decode_text: false,\n        encoding: \"undefined\",\n        ...options\n    };\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.filesystem) === null || _b === void 0 ? void 0 : _b.pickFile) === \"function\") {\n        // @ts-ignore\n        return JSON.parse(await globalThis.AstroBox.filesystem.pickFile(JSON.stringify(options_)));\n    }\n    else {\n        throw new Error(\"AstroBox.filesystem.pickFile not available\");\n    }\n}\nexport async function readFile(path, options) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.filesystem) === null || _b === void 0 ? void 0 : _b.readFile) === \"function\") {\n        let options_ = {\n            offset: 0,\n            decode_text: true,\n            ...options\n        };\n        // @ts-ignore\n        var result = await globalThis.AstroBox.filesystem.readFile(path, JSON.stringify(options_));\n        if (options_.decode_text) {\n            return result;\n        }\n        return base64ToUint8Array(result);\n    }\n    else {\n        throw new Error(\"AstroBox.filesystem.readFile not available\");\n    }\n}\nexport async function unloadFile(path) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.filesystem) === null || _b === void 0 ? void 0 : _b.unloadFile) === \"function\") {\n        // @ts-ignore\n        return await globalThis.AstroBox.filesystem.unloadFile(path);\n    }\n    else {\n        throw new Error(\"AstroBox.filesystem.unloadFile not available\");\n    }\n}\n","// @ts-ignore\nfunction call(name, file) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.installer) === null || _b === void 0 ? void 0 : _b[name]) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.installer[name](file);\n    }\n    else {\n        // @ts-ignore\n        throw new Error(`AstroBox.installer.${name} not available`);\n    }\n}\nexport const addThirdPartyAppToQueue = (f) => call(\"addThirdPartyAppToQueue\", f);\nexport const addWatchFaceToQueue = (f) => call(\"addWatchFaceToQueue\", f);\nexport const addFirmwareToQueue = (f) => call(\"addFirmwareToQueue\", f);\n","__webpack_require__.rv = () => (\"1.4.10\")","__webpack_require__.ruid = \"bundler=rspack@1.4.10\";\n","export async function sendQAICMessage(pkgName, data) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.interconnect) === null || _b === void 0 ? void 0 : _b.sendQAICMessage) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.interconnect.sendQAICMessage(pkgName, data);\n    }\n    else {\n        throw new Error(\"AstroBox.interconnect.sendQAICMessage not available\");\n    }\n}\n","export function onLoad(cb) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.lifecycle) === null || _b === void 0 ? void 0 : _b.onLoad) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.lifecycle.onLoad(cb);\n    }\n    else {\n        throw new Error(\"AstroBox.lifecycle.onLoad not available\");\n    }\n}\n","export function regNativeFun(func) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.native) === null || _b === void 0 ? void 0 : _b.regNativeFun) === \"function\") {\n        // @ts-ignore\n        return globalThis.AstroBox.native.regNativeFun(func);\n    }\n    throw new Error(\"AstroBox.native.regNativeFun not available\");\n}\n","import { base64ToUint8Array, uint8ArrayToBase64 } from \"../utils.js\";\nexport async function fetch(url, options) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.network) === null || _b === void 0 ? void 0 : _b.fetch) === \"function\") {\n        // @ts-ignore\n        options.body_encoded = typeof options.body !== \"string\";\n        // @ts-ignore\n        options.body = options.body ? (options.body_encoded ? uint8ArrayToBase64(options.body) : options.body) : \"\";\n        // @ts-ignore\n        let ret = await globalThis.AstroBox.network.fetch(url, JSON.stringify({ raw: false, ...options }));\n        ret.body = options.raw ? base64ToUint8Array(ret.body) : ret.body;\n        return ret;\n    }\n    throw new Error(\"AstroBox.network.fetch not available\");\n}\n","export async function registerCommunityProvider(provider) {\n    var _a, _b;\n    // @ts-ignore\n    if (\n    // @ts-ignore\n    typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.provider) === null || _b === void 0 ? void 0 : _b.registerCommunityProvider) ===\n        \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.provider.registerCommunityProvider(JSON.stringify(provider));\n    }\n    else {\n        throw new Error(\"AstroBox.provider.registerCommunityProvider not available\");\n    }\n}\n","export async function launchQA(appInfo, pageName) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.thirdpartyapp) === null || _b === void 0 ? void 0 : _b.launchQA) === \"function\") {\n        // @ts-ignore\n        await globalThis.AstroBox.thirdpartyapp.launchQA(JSON.stringify(appInfo), pageName);\n    }\n    else {\n        throw new Error(\"AstroBox.thirdpartyapp.launchQA not available\");\n    }\n}\nexport async function getThirdPartyAppList() {\n    var _a, _b;\n    // @ts-ignore\n    if (\n    // @ts-ignore\n    typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.thirdpartyapp) === null || _b === void 0 ? void 0 : _b.getThirdPartyAppList) ===\n        \"function\") {\n        // @ts-ignore\n        const raw = await globalThis.AstroBox.thirdpartyapp.getThirdPartyAppList();\n        return JSON.parse(raw);\n    }\n    throw new Error(\"AstroBox.thirdpartyapp.getThirdPartyAppList not available\");\n}\n","// @ts-ignore\nfunction call(name, arg) {\n    var _a, _b;\n    // @ts-ignore\n    if (typeof ((_b = (_a = globalThis.AstroBox) === null || _a === void 0 ? void 0 : _a.ui) === null || _b === void 0 ? void 0 : _b[name]) === \"function\") {\n        // @ts-ignore\n        globalThis.AstroBox.ui[name](arg);\n    }\n    else {\n        // @ts-ignore\n        throw new Error(`AstroBox.ui.${name} not available`);\n    }\n}\nexport const updatePluginSettingsUI = (ui) => call(\"updatePluginSettingsUI\", JSON.stringify(ui));\nexport const openPageWithNodes = (ui) => call(\"openPageWithNodes\", JSON.stringify(ui));\nexport const openPageWithUrl = (url) => call(\"openPageWithUrl\", url);\n","import { initApis } from \"./init.js\";\nconst AstroBox = {};\ninitApis(AstroBox);\nexport default AstroBox;\n","import * as configImpl from \"./impls/config.js\";\nimport * as debugImpl from \"./impls/debug.js\";\nimport * as deviceImpl from \"./impls/device.js\";\nimport * as eventImpl from \"./impls/event.js\";\nimport * as filesystemImpl from \"./impls/filesystem.js\";\nimport * as installerImpl from \"./impls/installer.js\";\nimport * as interconnectImpl from \"./impls/interconnect.js\";\nimport * as lifecycleImpl from \"./impls/lifecycle.js\";\nimport * as nativeImpl from \"./impls/native.js\";\nimport * as networkImpl from \"./impls/network.js\";\nimport * as providerImpl from \"./impls/provider.js\";\nimport * as thirdpartyImpl from \"./impls/thirdpartyapp.js\";\nimport * as uiImpl from \"./impls/ui.js\";\nexport function initApis(AstroBox) {\n    // Config APIs\n    AstroBox.config = {};\n    AstroBox.config.readConfig = configImpl.read;\n    AstroBox.config.writeConfig = configImpl.write;\n    // Debug APIs\n    AstroBox.debug = {};\n    AstroBox.debug.sendRaw = debugImpl.sendRaw;\n    // Device APIs\n    AstroBox.device = {};\n    AstroBox.device.getDeviceList = deviceImpl.getDeviceList;\n    AstroBox.device.getDeviceState = deviceImpl.getDeviceState;\n    AstroBox.device.modifyDeviceState = deviceImpl.modifyDeviceState;\n    AstroBox.device.disconnectDevice = deviceImpl.disconnectDevice;\n    // Event APIs\n    AstroBox.event = {};\n    AstroBox.event.addEventListener = eventImpl.addEventListener;\n    AstroBox.event.removeEventListener = eventImpl.removeEventListener;\n    AstroBox.event.sendEvent = eventImpl.sendEvent;\n    // Installer APIs\n    AstroBox.installer = {};\n    AstroBox.installer.addThirdPartyAppToQueue = installerImpl.addThirdPartyAppToQueue;\n    AstroBox.installer.addWatchFaceToQueue = installerImpl.addWatchFaceToQueue;\n    AstroBox.installer.addFirmwareToQueue = installerImpl.addFirmwareToQueue;\n    // Interconnect APIs\n    AstroBox.interconnect = {};\n    AstroBox.interconnect.sendQAICMessage = interconnectImpl.sendQAICMessage;\n    // Lifecycle APIs\n    AstroBox.lifecycle = {};\n    AstroBox.lifecycle.onLoad = lifecycleImpl.onLoad;\n    // Native APIs\n    AstroBox.native = {};\n    AstroBox.native.regNativeFun = nativeImpl.regNativeFun;\n    // Network APIs\n    AstroBox.network = {};\n    AstroBox.network.fetch = networkImpl.fetch;\n    // Provider APIs\n    AstroBox.provider = {};\n    AstroBox.provider.registerCommunityProvider = providerImpl.registerCommunityProvider;\n    // Third-Party App APIs\n    AstroBox.thirdpartyapp = {};\n    AstroBox.thirdpartyapp.launchQA = thirdpartyImpl.launchQA;\n    AstroBox.thirdpartyapp.getThirdPartyAppList = thirdpartyImpl.getThirdPartyAppList;\n    // UI APIs\n    AstroBox.ui = {};\n    AstroBox.ui.updatePluginSettingsUI = uiImpl.updatePluginSettingsUI;\n    AstroBox.ui.openPageWithNodes = uiImpl.openPageWithNodes;\n    AstroBox.ui.openPageWithUrl = uiImpl.openPageWithUrl;\n    // FileSystem APIs\n    AstroBox.filesystem = {};\n    AstroBox.filesystem.pickFile = filesystemImpl.pickFile;\n    AstroBox.filesystem.readFile = filesystemImpl.readFile;\n    AstroBox.filesystem.unloadFile = filesystemImpl.unloadFile;\n}\n"],"names":["ui","read","_a","_b","globalThis","JSON","Error","write","content","uint8ArrayToBase64","bytes","base64abc","result","i","l","base64ToUint8Array","base64","table","padding","byteLength","arr","Uint8Array","byteIdx","n","sendRaw","data","getDeviceList","getDeviceState","addr","modifyDeviceState","state","disconnectDevice","addEventListener","eventName","callback","removeEventListener","sendEvent","payload","pickFile","options","options_","readFile","path","unloadFile","call","name","file","addThirdPartyAppToQueue","f","addWatchFaceToQueue","addFirmwareToQueue","sendQAICMessage","pkgName","onLoad","cb","regNativeFun","func","fetch","url","ret","registerCommunityProvider","provider","launchQA","appInfo","pageName","getThirdPartyAppList","arg","updatePluginSettingsUI","openPageWithNodes","openPageWithUrl","AstroBox","initApis","configImpl","debugImpl","deviceImpl","eventImpl","installerImpl","interconnectImpl","lifecycleImpl","nativeImpl","networkImpl","providerImpl","thirdpartyImpl","uiImpl","filesystemImpl","totalSize","nextOffset","BAND_PKG","started","ackTimer","retryCount","compiledBuffer","compiledName","pickId","onPick","sendId","onSendFile","onListen","raw","handleAck","picked","resetState","updateStatus","text","toText","bin","buildBinFromTxtContent","lines","String","entries","unitMap","Map","_parts_","_parts_1","_parts_2","_parts_3","_parts_4","parts","line","unitNum","word","kanji","tone","explain","eg","idx","totalWords","unitKeys","Array","a","b","Number","numUnits","dataChunks","offsets","lengths","dataLen","it","encodeUtf8","str","out","codePoint","next","newIndexOffset","originalIndexTableSize","buf","ArrayBuffer","headerAndTablesSize","view","DataView","pos","key","unit","firstIndex","count","chunk","getFileName","bytesToMB","err","extractErr","_","apps","sendMeta","e","pkg","clearAckTimer","sendChunk","startAckTimer","offset","len","Math","p","setTimeout","clearTimeout","res","decodeUtf8","b0","b1","b2","cp","b3"],"mappings":"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"}